{
  "swagger": "2.0",
  "info": {
    "title": "orders.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Orders"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/orders/accept": {
      "post": {
        "summary": "Принять заказ от курьера",
        "description": "Используется для принятия заказа от курьера. Заказ не может быть принят дважды. Срок хранения не может быть в прошлом.",
        "operationId": "AcceptOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ordersAcceptOrderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orderId",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "expiry",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "cost",
            "in": "query",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "weight",
            "in": "query",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "packaging",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Orders"
        ]
      }
    },
    "/v1/orders/deliver": {
      "post": {
        "summary": "Выдать заказы клиенту",
        "description": "Используется для выдачи заказов клиенту. Все заказы должны принадлежать одному клиенту и быть приняты от курьера. Срок хранения заказов должен быть больше текущей даты.",
        "operationId": "Orders_DeliverOrders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ordersDeliverOrdersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orderIds",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uint64"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Orders"
        ]
      }
    },
    "/v1/orders/list": {
      "get": {
        "summary": "Получить список заказов",
        "description": "Используется для получения списка заказов. Команда возвращает заказы клиента, которые находятся в ПВЗ, с возможностью ограничить количество возвращаемых заказов и задать смещение.",
        "operationId": "Orders_ListOrders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ordersListOrdersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "isStored",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Orders"
        ]
      }
    },
    "/v1/orders/return": {
      "delete": {
        "summary": "Вернуть заказ курьеру",
        "description": "Используется для возврата заказа курьеру. Заказ может быть возвращен только если истек срок хранения и он не был выдан клиенту.",
        "operationId": "Orders_ReturnOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ordersReturnOrderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orderId",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Orders"
        ]
      }
    }
  },
  "definitions": {
    "ListOrdersResponseOrder": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string",
          "format": "uint64"
        },
        "userId": {
          "type": "string",
          "format": "uint64"
        },
        "expiry": {
          "type": "string",
          "format": "date-time"
        },
        "returnBy": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string"
        },
        "hash": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "cost": {
          "type": "number",
          "format": "double"
        },
        "weight": {
          "type": "number",
          "format": "double"
        },
        "packaging": {
          "type": "string"
        }
      }
    },
    "ordersAcceptOrderResponse": {
      "type": "object"
    },
    "ordersDeliverOrdersResponse": {
      "type": "object"
    },
    "ordersListOrdersResponse": {
      "type": "object",
      "properties": {
        "orders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ListOrdersResponseOrder"
          }
        }
      }
    },
    "ordersReturnOrderResponse": {
      "type": "object"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
